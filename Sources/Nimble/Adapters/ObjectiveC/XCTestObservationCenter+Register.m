#import "CurrentTestCaseTracker.h"
#import <XCTest/XCTest.h>
#import <objc/runtime.h>

#pragma mark - Private

@interface XCTestObservationCenter (Private)
- (void)_addLegacyTestObserver:(id)observer;
@end

@implementation XCTestObservationCenter (Register)

/// Uses objc method swizzling to register `CurrentTestCaseTracker` as a test observer. This is necessary
/// because Xcode 7.3 introduced timing issues where if a custom `XCTestObservation` is registered too early
/// it suppresses all console output (generated by `XCTestLog`), breaking any tools that depend on this output.
/// This approach waits to register our custom test observer until XCTest adds its first "legacy" observer,
/// falling back to registering after the first normal observer if this private method ever changes.
+ (void)load {
    // Swizzle -_addLegacyTestObserver:
    SEL originalSelector = @selector(_addLegacyTestObserver:);
    SEL replacementSelector = @selector(NMB_original__addLegacyTestObserver:);
    Method originalMethod = class_getInstanceMethod(self, originalSelector);
    Method replacementMethod = class_getInstanceMethod(self, replacementSelector);

    if (originalMethod) {
        class_addMethod(self, originalSelector, method_getImplementation(replacementMethod), method_getTypeEncoding(replacementMethod));
        class_replaceMethod(self, replacementSelector, method_getImplementation(originalMethod), method_getTypeEncoding(originalMethod));
    } else {
        // Swizzle -addTestObserver:, only if -_addLegacyTestObserver: is not implemented
        originalSelector = @selector(addTestObserver:);
        replacementSelector = @selector(NMB_original_addTestObserver:);
        originalMethod = class_getInstanceMethod(self, originalSelector);
        replacementMethod = class_getInstanceMethod(self, replacementSelector);

        class_addMethod(self, originalSelector, method_getImplementation(replacementMethod), method_getTypeEncoding(replacementMethod));
        class_replaceMethod(self, replacementSelector, method_getImplementation(originalMethod), method_getTypeEncoding(originalMethod));
    }
}

/// Registers `CurrentTestCaseTracker` as a test observer after `XCTestLog` has been added.
- (void)NMB_original__addLegacyTestObserver:(id)observer {
    [self NMB_original__addLegacyTestObserver:observer];
    [self addTestObserver:[CurrentTestCaseTracker sharedInstance]];
}

/// Registers `CurrentTestCaseTracker` as a test observer after `XCTestLog` has been added.
/// This method is only used if `-_addLegacyTestObserver:` is not impelemented. (added in Xcode 7.3)
- (void)NMB_original_addTestObserver:(id<XCTestObservation>)observer {
    [self NMB_original__addLegacyTestObserver:observer];
    [self addTestObserver:[CurrentTestCaseTracker sharedInstance]];
}

@end
